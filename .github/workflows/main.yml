name: Susak Python CI

# Определяем, когда запускать workflow
on:
  push:
    branches:
      - main  # Запускать workflow при push в основную ветку
# Запускать workflow при открытии и синхронизации pull request
 # pull_request:
  #  types: [opened, synchronize] 
  workflow_dispatch:  # Позволяет запускать workflow вручную через интерфейс GitHub

# Определяем задачи
jobs:
  build:
    # Используем общедоступный runner Ubuntu
    runs-on: ubuntu-latest
    
    # Шаги для выполнения
    steps:
      # Клонирование репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      # Установка Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Указываем версию Python 3.10, как требуется

      # Установка зависимостей
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Выполнение скрипта для создания/обновления базы данных
      - name: Run db.py script to initialize the database
        run: python db.py --add_default_data

      # Запуск приложения
      - name: Run the API
        run: nohup python app.py --host 0.0.0.0 --port 5000 & echo $! > api.pid 
      # Блок автоматической тестировки приложения 
      # Тест работы  API 
      - name: Test API endpoint
        run: curl --fail http://0.0.0.0:5000/api/products
      # В результате выводиться список из строки 36 default data 
      
      # Добавление продукта для тестирования добавляеться продукт Eggs по цене 12 
      - name: Add a test product
        run: |
          curl -X POST http://0.0.0.0:5000/api/products -H "Content-Type: application/json" -d '{"name": "Eggs", "price": 12}'

      # Проверка, что продукт доступен по ID
      - name: Test API endpoint for a specific product
        run: curl --fail http://0.0.0.0:5000/api/products/6
       # В результате выводиться Id продукта названий и цена 
        
        
      # Остановка сервера Flask
      - name: Stop the API
        run: kill $(cat api.pid)
# автоматическое deploy на Azure 
  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    # ОБЯЗАТЕЛЬНО ПОВТОРИТЬ ВСЕ ДЕЙСТВИЯ КАКИЕ БЫЛЫ В РАЗДЕЛЕ built
   # Установка Python на сервере для деплоя
      - name: Set up Python for deploy
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Указываем версию Python для Azure Web App

      # Установка зависимостей на сервере для деплоя
      - name: Install dependencies for deploy
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        with:
          app-name: "susakpython"  # Имя  Azure Web App
          #publish-profile: ${{ secrets.AZURE_CREDENTIALS }}  # Секрет с данными аутентификации
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
